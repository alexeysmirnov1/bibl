version: '3.7'

networks:
  bibl:
    driver: overlay
    external: true

volumes:
  traefik-public-certificates:
    external: true

services:
  app:
    container_name: ${COMPOSE_PROJECT_NAME}_app_local
    build:
      args:
        - PHP_FPM_INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}
        - NGINX_UNIT_CONFIG_FILENAME=${NGINX_UNIT_CONFIG_FILENAME?Variable not set}
        - REPOSITORY_NAME=${REPOSITORY_NAME?Variable not set}
        - REGISTRY_PROJECT_NAME=${REGISTRY_PROJECT_NAME?Variable not set}
      context: .
      dockerfile: docker/app/Dockerfile_local
    image: ${IMAGE_REGISTRY_PATH}/${REGISTRY_PROJECT_NAME}:${APP_IMAGE_TAG}
    cap_add:
      - SYS_PTRACE
    logging:
        driver: "json-file"
        options:
            max-size: "10m"
            max-file: "3"
    volumes:
      - ./:/var/www
      - ${CONTAINER_CONFIGS_PATH?Variable not set}/app/laraflag.ini:/usr/local/etc/php/conf.d/laraflag.ini:ro
      - ${CONTAINER_CONFIGS_PATH?Variable not set}/app/${NGINX_UNIT_CONFIG_FILENAME}:/${NGINX_UNIT_CONFIG_FILENAME}:ro
    networks:
      - ${COMPOSE_PROJECT_NAME?Variable not set}
    labels:
      - ru.${COMPOSE_PROJECT_NAME}.container.name=app
      - traefik.enable=true
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}
      - traefik.http.middlewares.traefik-compress.compress=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-app-service.loadbalancer.server.port=${APP_PORT}

      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.rule=Host(`${APP_URI}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.entrypoints=http
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.middlewares=https-redirect
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.service=${COMPOSE_PROJECT_NAME}-app-service

      - traefik.http.services.secure-${COMPOSE_PROJECT_NAME}-app-service.loadbalancer.server.port=${APP_PORT}

      - traefik.http.routers.secure-${COMPOSE_PROJECT_NAME}-app-router.rule=Host(`${APP_URI}`)
      - traefik.http.routers.secure-${COMPOSE_PROJECT_NAME}-app-router.entrypoints=https
      - traefik.http.routers.secure-${COMPOSE_PROJECT_NAME}-app-router.service=${COMPOSE_PROJECT_NAME}-app-service
      - traefik.http.routers.secure-${COMPOSE_PROJECT_NAME}-app.middlewares=traefik-compress
      - traefik.http.routers.secure-${COMPOSE_PROJECT_NAME}-app-router.tls=true
      - traefik.http.routers.secure-${COMPOSE_PROJECT_NAME}-app-router.tls.certresolver=le
    restart: unless-stopped

  traefik:
    image: traefik:v2.9.1
    container_name: ${COMPOSE_PROJECT_NAME}_traefik
    security_opt:
      - no-new-privileges:true
    ports:
      - ${TRAEFIK_WEB_PORT}:80
      - ${TRAEFIK_SECURE_WEB_PORT}:443
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:${TRAEFIK_WEB_PORT}
      - --entrypoints.https.address=:${TRAEFIK_SECURE_WEB_PORT}

      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.email=info@${APP_URI}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=http
      ## LOG CONFIG..
      - --log.level=ERROR
      - --accesslog=true
      - --accesslog.format=json
      - --accesslog.filters.statuscodes=200,201,400,401,403,405,406,408,409,405,412,413,414,417,419,421,422,429,431,499,500,502,503,504,507,509,520,521,522,523,524,525,526
      ## ..LOG CONFIG
      ## METRICS CONFIG..
      - --metrics=true
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --metrics.prometheus.entrypoint=http
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      ## ..METRICS CONFIG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - traefik-public-certificates:/certificates
    networks:
      - ${COMPOSE_PROJECT_NAME}
    labels:
      - ru.${COMPOSE_PROJECT_NAME}.container.name=traefik
      - traefik.enable=true
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}

      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.middlewares.admin-auth.basicauth.users=admin:$$apr1$$Va0nbodf$$U8kT64SLE040pn/RPEwjN.

      - traefik.http.middlewares.www-https-redir.redirectregex.regex=^https://www\.(.+)
      - traefik.http.middlewares.www-https-redir.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.www-https-redir.redirectregex.permanent=true

      - traefik.http.middlewares.www-redir.redirectregex.regex=^http://www\.(.+)
      - traefik.http.middlewares.www-redir.redirectregex.replacement=http://$${1}
      - traefik.http.middlewares.www-redir.redirectregex.permanent=true

      - traefik.http.routers.traefik-public-http.rule=Host(`${TRAEFIK_URI?Variable not set}`)
      - traefik.http.routers.traefik-public-http.entrypoints=http
      - traefik.http.routers.traefik-public-http.middlewares=https-redirect

      - traefik.http.routers.traefik-public-https.rule=Host(`${TRAEFIK_URI?Variable not set}`)
      - traefik.http.routers.traefik-public-https.entrypoints=https
      - traefik.http.routers.traefik-public-https.tls=true
      - traefik.http.routers.traefik-public-https.service=api@internal
      - traefik.http.routers.traefik-public-https.tls.certresolver=le
      - traefik.http.services.traefik-public.loadbalancer.server.port=${TRAEFIK_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  postgres:
    image: postgres:${POSTGRES_VERSION}-alpine
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data:delegated
    ports:
      - 127.0.0.1:${POSTGRES_EXTERNAL_PORT}:5432
    networks:
      - ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
